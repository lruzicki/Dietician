// <auto-generated />
using System;
using Dietician.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dietician.Migrations
{
    [DbContext(typeof(DieticianContext))]
    partial class DieticianContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dietician.Models.Chef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PublicationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublicationId");

                    b.ToTable("Chefs");
                });

            modelBuilder.Entity("Dietician.Models.Publication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publication");
                });

            modelBuilder.Entity("MvcMovie.Dietician.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ChefId")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PublicationId")
                        .HasColumnType("int");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("ChefId");

                    b.HasIndex("PublicationId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Dietician.Models.Chef", b =>
                {
                    b.HasOne("Dietician.Models.Publication", "Publication")
                        .WithMany("Chefs")
                        .HasForeignKey("PublicationId");

                    b.Navigation("Publication");
                });

            modelBuilder.Entity("MvcMovie.Dietician.Recipe", b =>
                {
                    b.HasOne("Dietician.Models.Chef", "chef")
                        .WithMany()
                        .HasForeignKey("ChefId");

                    b.HasOne("Dietician.Models.Publication", "Publication")
                        .WithMany("Recipes")
                        .HasForeignKey("PublicationId");

                    b.Navigation("Publication");

                    b.Navigation("chef");
                });

            modelBuilder.Entity("Dietician.Models.Publication", b =>
                {
                    b.Navigation("Chefs");

                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
